{"version":3,"sources":["Components/collection-items/collection-items.jsx","Components/with-spinner/with-spinner.styles.jsx","Components/with-spinner/with-spinner.jsx","Components/preview-collection/preview-collection.jsx","Components/collections-overview/collections-overview.js","Components/collections-overview/collections-overview.container.jsx","redux/shop/shop.selectors.js"],"names":["connect","dispatch","addItem","item","name","price","imageUrl","className","style","backgroundImage","onClick","inverted","SpinnerOverlay","styled","div","SpinnerContainer","WithSpinner","WrappedComponent","isLoading","otherProps","CollectionPreview","title","items","toUpperCase","filter","idx","map","id","mapStateToProps","createStructuredSelector","collections","selectCollectionsForPreview","otherCollectionProps","selectIsCollectionFetching","CollectionsOverviewContainer","compose","CollectionsOverview","selectShop","state","shop","selectCollections","createSelector","Object","keys","key","selectCollection","collectionUrlParam","isFetching","selectIsCollectionsLoaded"],"mappings":"wGAAA,iDA6BeA,gBACb,MALyB,SAAAC,GAAQ,MAAK,CACtCC,QAAS,SAAAC,GAAI,OAAIF,EAASC,YAAQC,QAGrBH,EAvBQ,SAAC,GAAqB,IAApBG,EAAmB,EAAnBA,KAAMD,EAAa,EAAbA,QACtBE,EAAuBD,EAAvBC,KAAKC,EAAkBF,EAAlBE,MAAMC,EAAYH,EAAZG,SAClB,OACA,sBAAKC,UAAU,kBAAf,UACE,qBAAKA,UAAU,QACTC,MAAO,CACLC,gBAAgB,OAAD,OAAQH,EAAR,QAIvB,sBAAKC,UAAU,oBAAf,UACE,sBAAMA,UAAU,OAAhB,SAAwBH,IACxB,sBAAMG,UAAU,QAAhB,SAAyBF,OAE3B,cAAC,IAAD,CAAcK,QAAS,kBAAIR,EAAQC,IAAOQ,UAAQ,EAAlD,iC,qGClBSC,EAAiBC,IAAOC,IAAV,mIAQdC,EAAmBF,IAAOC,IAAV,6c,OCGdE,IAVK,SAAAC,GAAgB,OAAI,YAAiC,IAA/BC,EAA8B,EAA9BA,UAAcC,EAAgB,6BACtE,OAAOD,EACL,cAACN,EAAD,UACE,cAACG,EAAD,MAGF,cAACE,EAAD,eAAsBE,O,qLCUXC,EAfW,SAAC,GAAD,IAAEC,EAAF,EAAEA,MAAMC,EAAR,EAAQA,MAAR,OACxB,sBAAKf,UAAY,qBAAjB,UACE,oBAAIA,UAAU,QAAd,SAAuBc,EAAME,gBAC7B,qBAAKhB,UAAU,UAAf,SAEIe,EACCE,QAAO,SAACrB,EAAKsB,GAAN,OAAYA,EAAI,KACvBC,KAAI,SAACvB,GAAD,OACH,cAAC,IAAD,CAA8BA,KAAMA,GAAfA,EAAKwB,aCK9BC,EAAkBC,YAAyB,CAC/CC,YAAaC,MAGA/B,cAAQ4B,EAAR5B,EAda,SAAC,GAAD,IAAE8B,EAAF,EAAEA,YAAF,OAC1B,qBAAKvB,UAAU,uBAAf,SAEIuB,EAAYJ,KAAI,gBAAEC,EAAF,EAAEA,GAAMK,EAAR,6BACd,cAAC,EAAD,eAAiCA,GAATL,WCF1BC,EAAkBC,YAA0B,CAChDX,UAAWe,MAGPC,EAA+BC,YACnCnC,YAAQ4B,GACRZ,IAFmCmB,CAGnCC,GAGaF,a,gCCnBf,oJAGMG,EAAa,SAAAC,GAAK,OAAIA,EAAMC,MAErBC,EAAoBC,YAC/B,CAACJ,IACD,SAAAE,GAAI,OAAIA,EAAKT,eAIFC,EAA8BU,YACzC,CAACD,IACD,SAAAV,GAAW,OACXA,EAAcY,OAAOC,KAAKb,GAAaJ,KAAI,SAAAkB,GAAG,OAAGd,EAAYc,MAAQ,MAG1DC,EAAmB,SAAAC,GAAkB,OAChDL,YACE,CAACD,IACD,SAAAV,GAAW,OACZA,EAAcA,EAAYgB,GAAsB,SAGtCb,EAA6BQ,YACxC,CAACJ,IACD,SAAAE,GAAI,OAAIA,EAAKQ,cAGFC,EAA4BP,YACvC,CAACJ,IACD,SAAAE,GAAI,QAAMA,EAAKT","file":"static/js/3.4f126f4c.chunk.js","sourcesContent":["import React from 'react';\nimport {connect} from 'react-redux';\nimport CustomButton from '../custom-button/custom-button'\nimport {addItem} from '../../redux/cart/cart.actions'\nimport './collection-items.scss'\n\nconst CollectionItem = ({item, addItem}) => {\n  const {name,price,imageUrl} = item;\n  return (\n  <div className='collection-item'>\n    <div className='image'\n          style={{\n            backgroundImage:`url(${imageUrl})`\n          }}>\n\n    </div>\n    <div className='collection-footer'>\n      <span className='name'>{name}</span>\n      <span className='price'>{price}</span>\n    </div>\n    <CustomButton onClick={()=>addItem(item)} inverted > ADD TO CART</CustomButton>\n\n  </div>\n)};\n\nconst mapDispatchToProps = dispatch => ({\n  addItem: item => dispatch(addItem(item))\n})\n\nexport default connect(\n  null,\n  mapDispatchToProps\n)(CollectionItem)\n","import styled from 'styled-components'\n\nexport const SpinnerOverlay = styled.div`\n  height: 60vh;\n  width: 100%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nexport const SpinnerContainer = styled.div`\n  display: inline-block;\n  width: 50px;\n  height: 50px;\n  border: 3px solid rgba(195, 195, 195, 0.6);\n  border-radius: 50%;\n  border-top-color: #636767;\n  animation: spin 1s ease-in-out infinite;\n  -webkit-animation: spin 1s ease-in-out infinite;\n  @keyframes spin {\n    to {\n      -webkit-transform: rotate(360deg);\n    }\n  }\n  @-webkit-keyframes spin {\n    to {\n      -webkit-transform: rotate(360deg);\n    }\n  }\n`;\n","import React from 'react'\nimport{SpinnerContainer, SpinnerOverlay} from './with-spinner.styles'\n\nconst WithSpinner = WrappedComponent => ({isLoading, ...otherProps}) => {\n  return isLoading ? (\n    <SpinnerOverlay>\n      <SpinnerContainer/>\n    </SpinnerOverlay>\n  ): (\n    <WrappedComponent {...otherProps}/>\n  )\n}\n\nexport default WithSpinner;\n","import React from 'react';\n\nimport './preview-collection.scss'\nimport CollectionItem from '../collection-items/collection-items.jsx'\nconst CollectionPreview = ({title,items}) => (\n  <div className = 'collection-preview'>\n    <h1 className='title'>{title.toUpperCase()}</h1>\n    <div className='preview'>\n      {\n        items\n        .filter((item,idx)=>idx<4)\n        .map((item) =>(\n          <CollectionItem key={item.id} item={item} />\n        ))\n      }\n    </div>\n  </div>\n)\n\nexport default CollectionPreview;\n","import React from 'react';\nimport {connect} from 'react-redux';\nimport {createStructuredSelector} from 'reselect';\nimport './collections-overview.styles.scss';\nimport CollectionPreview from '../preview-collection/preview-collection';\nimport {selectCollectionsForPreview} from '../../redux/shop/shop.selectors'\n\nconst CollectionsOverview = ({collections}) => (\n  <div className='collections-overview'>\n    {\n      collections.map(({id,...otherCollectionProps}) =>(\n        <CollectionPreview key={id} {... otherCollectionProps}/>\n      ))\n    }\n  </div>\n);\n\nconst mapStateToProps = createStructuredSelector({\n  collections: selectCollectionsForPreview\n})\n\nexport default connect(mapStateToProps)(CollectionsOverview)\n","import { connect} from 'react-redux';\nimport {createStructuredSelector} from 'reselect';\nimport {compose} from 'redux'\nimport {selectIsCollectionFetching} from '../../redux/shop/shop.selectors'\n\nimport WithSpinner from '../with-spinner/with-spinner';\nimport CollectionsOverview from './collections-overview';\n\n\nconst mapStateToProps = createStructuredSelector ({\n  isLoading: selectIsCollectionFetching\n});\n\nconst CollectionsOverviewContainer = compose (\n  connect(mapStateToProps),\n  WithSpinner\n)(CollectionsOverview);\n\n\nexport default CollectionsOverviewContainer;\n","import {createSelector} from 'reselect';\n\n\nconst selectShop = state => state.shop;\n\nexport const selectCollections = createSelector(\n  [selectShop],\n  shop => shop.collections\n);\n\n\nexport const selectCollectionsForPreview = createSelector(\n  [selectCollections],\n  collections =>\n  collections ? Object.keys(collections).map(key=> collections[key]) : []\n)\n\nexport const selectCollection = collectionUrlParam =>\n  createSelector(\n    [selectCollections],\n    collections =>\n  (collections ? collections[collectionUrlParam] : null)\n);\n\nexport const selectIsCollectionFetching = createSelector(\n  [selectShop],\n  shop => shop.isFetching\n);\n\nexport const selectIsCollectionsLoaded = createSelector(\n  [selectShop],\n  shop => !!shop.collections\n)\n"],"sourceRoot":""}