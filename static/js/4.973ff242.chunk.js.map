{"version":3,"sources":["Components/form-input/form-input.jsx","Components/sign-in/sign-in.jsx","Components/sign-up/sign-up.jsx","Pages/Sign-in-and-sign-up/sign-in-and-sign-up.jsx"],"names":["FormInput","handleChange","label","otherProps","className","onChange","value","length","SignIn","props","handleSubmit","event","a","preventDefault","emailSignInStart","state","email","password","target","name","setState","googleSignInStart","this","onSubmit","type","required","onClick","isGoogleSignIn","React","Component","connect","dispatch","SignUp","signUpStart","displayName","confirmPassword","alert","userCredentials","SignInAndSignUpPage"],"mappings":"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","file":"static/js/4.973ff242.chunk.js","sourcesContent":["import React from 'react';\nimport \"./form-input.scss\"\n\n\nconst FormInput = ({handleChange, label, ...otherProps}) => (\n  <div className='group'>\n    <input className='form-input' onChange={handleChange} {... otherProps}/>\n      {label?(\n        <label\n          className={`${\n            otherProps.value.length ? 'shrink' : ''\n          } form-input-label`}\n          >\n            {label}\n        </label>\n      ) :null }\n\n  </div>\n)\n\n\nexport default FormInput;\n","import React from 'react';\nimport './sign-in.scss'\nimport FormInput from '../form-input/form-input'\nimport CustomButton from '../custom-button/custom-button'\n\nimport {connect} from 'react-redux'\n// import {auth, singInWithGoogle} from '../../Firebase/firebase.utils';\nimport { googleSignInStart, emailSignInStart } from '../../redux/user/user.actions';\n\n\nclass SignIn extends React.Component{\n  constructor(props){\n    super(props);\n\n    this.state = {\n      email:'',\n      password:''\n    }\n  }\n\n  handleSubmit = async event => {\n    event.preventDefault();\n    const {emailSignInStart} = this.props;\n\n    const{email,password} = this.state;\n\n    emailSignInStart(email,password)\n\n    // try {\n    //   await auth.signInWithEmailAndPassword(email,password);\n    //   this.setState({email:\"\", password:\"\" })\n\n    // } catch (error) {\n    //   console.log(error);\n\n    // }\n  }\n\n  handleChange = (event) =>{\n    const { value, name }= event.target;\n    this.setState({[name]:value})\n  }\n  render(){\n    const {googleSignInStart} = this.props\n    return(\n      <div className='sign-in'>\n        <h2>I already have an account</h2>\n        <span>Sign in with your email and password</span>\n\n        <form onSubmit={this.handleSubmit}>\n          <FormInput name='email'\n                 type='email'\n                 value={this.state.email}\n                 handleChange={this.handleChange}\n                 label='email'\n                 required/>\n          <FormInput name='password'\n                 type='password'\n                 value={this.state.password}\n                 handleChange={this.handleChange}\n                 label = 'password'\n                 required/>\n          <div className='buttons' >\n            <CustomButton  type='submit'>Sign In</CustomButton>\n            <CustomButton  type='button' onClick = {googleSignInStart} isGoogleSignIn>Sign In with Google</CustomButton>\n            </div>\n        </form>\n      </div>\n    )\n  }\n}\n\nconst mapDispatchToProps = dispatch => ({\n  googleSignInStart: () => dispatch(googleSignInStart()),\n  emailSignInStart: (email,password) => dispatch(emailSignInStart({email,password}))\n})\n\nexport default connect(null, mapDispatchToProps)(SignIn)\n","import React from 'react'\nimport FormInput from '../form-input/form-input'\nimport CustomButon from '../custom-button/custom-button'\n\n// import {auth, createUserProfileDocument} from '../../Firebase/firebase.utils'\nimport './sign-up.scss'\nimport {signUpStart} from '../../redux/user/user.actions';\nimport {connect} from 'react-redux'\n\n\nclass SignUp extends React.Component {\n  constructor(){\n    super();\n\n    this.state = {\n      displayName:'',\n      email: '',\n      password: '',\n      confirmPassword:''\n    }\n  }\n\n  handleSubmit = async event => {\n    event.preventDefault();\n    const {signUpStart} = this.props\n    const {displayName, email, password, confirmPassword} = this.state;\n    if (password !== confirmPassword) {\n      alert(\"passwords don't match\");\n      return;\n      }\n    signUpStart({displayName,email,password})\n  };\n\n  handleChange = event => {\n    const {name,value} = event.target\n\n    this.setState({[name]: value});\n  };\n\n\n  render(){\n    const {displayName, email, password, confirmPassword} = this.state;\n    return(\n      <div className='sign-up'>\n        <h2 className='title'> I do not have an account</h2>\n        <span>Sign up with your email and password</span>\n        <form className='sign-up-form' onSubmit={this.handleSubmit}>\n          <FormInput\n            type='text'\n            name='displayName'\n            value={displayName}\n            onChange={this.handleChange}\n            label='Display Name'\n            required>\n          </FormInput>\n          <FormInput\n            type='email'\n            name='email'\n            value={email}\n            onChange={this.handleChange}\n            label='Email'\n            required>\n          </FormInput>\n          <FormInput\n            type='password'\n            name='password'\n            value={password}\n            onChange={this.handleChange}\n            label='Password'\n            required>\n          </FormInput>\n          <FormInput\n            type='password'\n            name='confirmPassword'\n            value={confirmPassword}\n            onChange={this.handleChange}\n            label='Confirm Password'\n            required>\n          </FormInput>\n          <div className='buttons' >\n            <CustomButon type ='submit'>Sign Up</CustomButon>\n          </div>\n        </form>\n\n      </div>\n    )\n  }\n};\n\nconst mapDispatchToProps = dispatch => ({\n  signUpStart: (userCredentials) => dispatch(signUpStart(userCredentials))\n})\n\nexport default connect(null,mapDispatchToProps)(SignUp);\n","import React from 'react';\nimport SignIn from '../../Components/sign-in/sign-in'\nimport SignUp from '../../Components/sign-up/sign-up'\n\nimport './sign-in-and-sign-up.scss'\n\n\n\n\nconst SignInAndSignUpPage = () => (\n  <div className='sign-in-and-sign-up'>\n  <SignIn/>\n  <SignUp/>\n  </div>\n);\n\nexport default SignInAndSignUpPage;\n"],"sourceRoot":""}